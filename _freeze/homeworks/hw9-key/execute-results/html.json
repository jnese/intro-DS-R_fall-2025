{
  "hash": "ce1277f9138e159314b56aa75ba6c194",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Homework 9\"\nauthor: \"Key\"\nformat:\n  html:\n    highlight-style: tango\n    code-fold: true\n    toc: true\nexecute: \n  echo: true\n  eval: true\n  message: false\n  warning: false\n---\n\n\n------------------------------------------------------------------------\n\n### Part 1\n\n------------------------------------------------------------------------\n\nThis part of the homework uses [Jenny Bryan](https://jennybryan.org/)'s [Lord of the Rings tidy data materials](https://github.com/jennybc/lotr-tidy).\n\n\n\n\n\n<br> <br>\n\n#### 1. Create a new RStudio Project and name it `hw_9`\n\n<br> <br>\n\n#### 2. Within that project, create a new Quarto document and modify the YAML to:\n\n-   Include your name\n-   Render to html\n-   Change the syntax highlighting to any scheme but the default\n-   Include code folding\n-   Include a table of contents\n    -   Use level 1 headers for items (4) through (8) below\n    -   Use level 2 headers for your table and plot in (7) below\n-   Set global chunk options for the document to display and evaluate all code, and not display any warnings or messages\n\n<br> <br>\n\n#### 3. Your first code chunk should:\n\n-   Be labelled `load-packages`\n-   Load all the necessary packages (please don't load packages you do **not** use)\n-   Include options for this code chunk so it will not display the code or the results from the code.\n\n<br> <br>\n\n# 4. Your second code chunk should:\n\n-   Be labelled `load-data`\n-   Import the following three data sets, each as separate objects\n    -   *The_Fellowship_Of_The_Ring.csv*\n    -   *The_Two_Towers.csv*\n    -   *The_Return_Of_The_King.csv*\n        -   (These data sets show the **words spoken** by characters of different races and genders in the *Lord of the Ring*s movie trilogy.)\n-   Combine these three data sets into one data set as a new object named `lotr_untidy`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfotr <- import(here(\"data\", \"The_Fellowship_Of_The_Ring.csv\")) %>% \n  as_tibble()\n\ntt <- import(here(\"data\", \"The_Two_Towers.csv\"))\n\nrotk <- import(here(\"data\", \"The_Return_Of_The_King.csv\"))\n\nlotr_untidy <- bind_rows(fotr, tt, rotk) %>% \n  as_tibble() \n```\n:::\n\n\n<br> <br>\n\n# 5. Describe why the combined data set is not tidy.\n\nThere is information in the column headings, namely sex (male, female).\n\n<br> <br>\n\n# 6. Your third code chunk should:\n\n-   Have a meaningful label (do not use spaces or capital letters or underscores)\n-   Tidy the combined data set\n-   Save the tidy data to the data folder in your project as `lotr_tidy`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlotr_tidy <- lotr_untidy %>% \n  pivot_longer(\n    cols = c(Female, Male),\n    names_to = \"Gender\",\n    values_to = \"Words\"\n  )\n\nexport(lotr_tidy, here(\"data\", \"lotr_tidy.csv\"))\n```\n:::\n\n\n<br> <br>\n\n# 7. Your fourth code chunk should include code that:\n\n-   Reads in the *Female.csv* and *Male.csv* files and saves a single tidy data frame to file\n-   This should reproduce exactly the `lotr_tidy` data from above\n-   Compute the total number of words spoken by each race across the entire trilogy.\n-   Show these results in a table and a figure.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- import(here(\"data\", \"Female.csv\")) %>% \n  bind_rows(import(here(\"data\", \"Male.csv\"))) %>% \n  rename(Human = Man) %>% \n  pivot_longer(\n    cols = c(Elf, Hobbit, Human),\n#OR cols = -c(film, Gender)    \n    names_to = \"Race\",\n    values_to = \"Words\"\n  ) %>% \n  select(names(lotr_tidy))\n#OR select(Film, Race, Gender, Words)\n\nd_summary <- d %>% \n  group_by(Race) %>% \n  summarize(total_words = sum(Words)) \n```\n:::\n\n\n**Total number of words spoken by each race across the entire LOTR trilogy**\n\n## **Table**\n\n\n::: {#tbl-words .cell tbl-cap='Total number of words spoken by each race across the entire LOTR trilogy'}\n\n```{.r .cell-code}\nd_summary %>% \n  kable(digits = 2,\n         col.names = c(\"Race\", \"Total Words\")) %>% \n  kable_styling(latex_options = \"striped\", full_width = FALSE)\n```\n\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Race </th>\n   <th style=\"text-align:right;\"> Total Words </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Elf </td>\n   <td style=\"text-align:right;\"> 3737 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hobbit </td>\n   <td style=\"text-align:right;\"> 8796 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Human </td>\n   <td style=\"text-align:right;\"> 8712 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n\n## **Figure**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_summary %>% \n  ggplot(aes(Race, total_words)) +\n  geom_col(fill = \"cornflowerblue\") +\n  theme_minimal() +\n  labs(y = \"Total Words Spoken\",\n       title = \"Lord of the Rings Trilogy\",\n       subtitle = \"Total number of words spoken by three races across the movie trilogy\")\n```\n\n::: {.cell-output-display}\n![Total number of words spoken by three races across the movie trilogy](hw9-key_files/figure-html/fig-words-1.png){#fig-words width=672}\n:::\n:::\n\n\n<br> <br>\n\n#### 8. Let's make messy data. Your fifth code chunk should include code that uses `lotr_tidy` and `pivot_wider()` to:\n\n-   Get one variable per `Race.` Save this as an object\n-   Get one variable per `Gender.` Save this as an object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmessy_by_race <- lotr_tidy %>% \n  pivot_wider(\n    names_from = Race, \n    values_from = Words,\n  )\n\nmessy_by_gender <- lotr_tidy %>% \n  pivot_wider(\n    names_from = Gender, \n    values_from = Words,\n  )\n```\n:::\n\n\n<br> <br> <br> <br>\n\n------------------------------------------------------------------------\n\n### Part 2\n\n------------------------------------------------------------------------\n\n<br> <br>\n\n#### 1. Tidy the *Project Reads* data\n\n-   Load the **Project_Reads_Scores.csv** file\n-   Remove columns 5-9, 24, and 25\n-   Filter to remove the rows in *student_id* that represent aggregate summaries\n-   Tidy the remaining dataset such that a case represents a score and percentage within a unit (i.e., *score* and *percentage* will be separate columns). Take a VERY close look at the data. You will be able to use the `names_sep` argument if you **first** `rename()` two columns. Identify those two columns first. Also, you will need to first `pivot_longer` and then `pivot_wider` in order to tidy properly. In these data, \"tidy\" is a row for each of the seven *units* for every *student_id*.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(janitor)\nlibrary(ggthemes)\n\ntheme_set(theme_minimal())\n\nreads <- read_csv(here(\"data\", \"Project_Reads_Scores.csv\")) %>% \n  clean_names()\n\n\nreads_tidy <- reads %>% \n  select(4, 1:3, 10:23) %>% \n  rename(\"unit_56_score\" = \"unit_5_6_score\", \n         \"unit_56_percent\" = \"unit_5_6_percent\") %>% \n  filter(student_id != \"All Students (Average)\") %>% \n  pivot_longer(\n    cols = contains(\"unit\"),\n    names_prefix = \"unit_\",\n    names_sep = \"_\",\n    names_to = c(\"unit\", \"score_type\"),\n    values_to = \"score\",\n    values_transform = list(score = as.character)\n  ) %>% \n  mutate(score = parse_number(score)) %>% \n  pivot_wider(\n    names_from = score_type,\n    values_from = score\n  )\n```\n:::\n\n\n<br> <br>\n\n#### 2. Produce a summary table of the mean percentage correct for each unit within test sites. Report the summary in a table.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreads_summary <- reads_tidy %>% \n\tgroup_by(test_site, unit) %>% \n\tsummarize(percent = mean(percent))\n\nreads_summary %>% \n  kable()\n```\n\n::: {.cell-output-display}\n\n\n|test_site |unit |   percent|\n|:---------|:----|---------:|\n|JONES     |1    |  8.266667|\n|JONES     |2    | 13.333333|\n|JONES     |3    | 17.066667|\n|JONES     |4    | 22.666667|\n|JONES     |56   | 29.466667|\n|JONES     |7    | 46.533333|\n|JONES     |8    | 52.400000|\n|VIRDEN    |1    | 16.800000|\n|VIRDEN    |2    | 18.400000|\n|VIRDEN    |3    | 24.800000|\n|VIRDEN    |4    | 27.400000|\n|VIRDEN    |56   | 44.400000|\n|VIRDEN    |7    | 55.533333|\n|VIRDEN    |8    | 61.066667|\n|WESTSIDE  |1    | 14.133333|\n|WESTSIDE  |2    | 19.466667|\n|WESTSIDE  |3    | 22.933333|\n|WESTSIDE  |4    | 29.000000|\n|WESTSIDE  |56   | 31.333333|\n|WESTSIDE  |7    | 38.466667|\n|WESTSIDE  |8    | 50.133333|\n\n\n:::\n:::\n",
    "supporting": [
      "hw9-key_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}