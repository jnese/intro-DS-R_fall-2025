{
  "hash": "9229c1687291c063c153e74cea999e39",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Homework 4\"\nauthor: \"Key\"\nformat:\n  html:\n    code-fold: true\nexecute: \n  error: true\n  message: false\n  warning: false\n  echo: false\n  output: false\n---\n\n\n# Create a RStudio Project on your machine\n\n-   Name the Project \"hw_4\"\n-   Within the Project create a folder for *data* and *scripts*.\n-   Download the following three datasets into the project *data* folder.\n    -   *sesame13.sav*\n    -   *star.csv*\n    -   *ais.xlsx*\n-   Save a hw_4.qmd file in your *scripts* folder\n\n# Part 1\n\nInstall and load the package `{Lahman}`, which will give you access to the *Teams* data.\n\n\n::: {.cell}\n\n:::\n\n\n#### 1. Produce a subset of the data (as a new object) that has the following characteristics:\n\n- only one team (your choice)\n    + (try to you select a team that is currently still around, or it probably won't be interesting; see a [list of current teams](http://www.espn.com/mlb/teams)).\n- data from 1980 to present (or as current as the dataset allows)\n- includes 5 columns: `name`, `yearID`, `W`, `L`, `R`, `RA`. These 5 variables correspond to the team name, the year, wins, losses, runs scored, and runs allowed).\n\n\n::: {.cell}\n\n:::\n\n\n#### 2. Create a new variable corresponding to the winning percentage for the team you chose over time:\n\n$$w_{pct} = \\frac{wins}{wins + losses}$$\n\n* Order by winning percentage: Least to greatest \n* Order by winning percentage: Greatest to least \n* Compute the `mean` and `standard deviation` of winning percentage\n\n\n::: {.cell}\n\n:::\n\n\n#### 3. With the full *Teams* data:\n\n-   Compute the `mean` and `standard deviation` of winning percentage for each team\n-   Order by winning percentage, greatest to least\n\n\n::: {.cell}\n\n:::\n\n\n#### 4. Use the full data to reproduce the plot below\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](hw4-key_files/figure-html/plot-1.png){width=672}\n:::\n:::\n\n\n# Part 2\n\n#### 1. Read in the following three datasets, using `{here}` and the package of your choice (`{rio}`, `{readr}`, `{haven}`, `{readxl}`)\n\n-   *sesame13.sav*\n-   *star.csv*\n-   *ais.xlsx*\n\n**Hint**: For the *ais.xlsx* data, look at the `skip` argument within the [`{readxl}`](https://readxl.tidyverse.org/reference/read_excel.html) help documentation.\n\n\n::: {.cell}\n\n:::\n\n\n#### 2. Using the *ais* data, compute the average red blood cell count and average `bmi` by sport. Output these data as SPSS (.sav) and EXCEL files.\n\n\n::: {.cell}\n\n:::\n\n\n#### 3. Use the *sesame* data to answer the following question: Was the average female age higher in schools or at home?\n\n\n::: {.cell}\n\n:::\n\n\n#### 4. First, how many rows and columns are in the *star* data? Next, remove outliers using a really poor method, just for practice, by eliminating students whose math (`tmathss`) scores were more than three standard deviations **above *or* below** the corresponding mean. How many rows are in the data now?\n\n\n::: {.cell}\n\n:::\n\n\n#### 5. Use the *star* data to compute standardized math and reading scores; name these variables *tmathss_z* and *treadss_z*. To create standardized scores, for each variable (math and reading), subtract the mean from each observation and divide by the standard deviation: $x_s = \\frac{x_i - \\bar{X}}{sd(X)}$.\n\n-   Check that your computations were correct by computing the mean and standard deviation of each variable (they should be 0 and 1, respectively).\n-   Compute the mean of the standardized variable for all `sex`/`frl` combinations. (I'm asking you to extend what you know here. We haven't talked explicitly about how to do this yet, but you have seen examples).\n-   What do you make of these findings? Do you see an effect by `sex`? An `frl` effect (`frl` stands for free/reduced lunch, and is a rough proxy for household income)? Is there evidence of an interaction (i.e., that the effect of `frl` is greater for boys versus girls)?\n\n\n::: {.cell}\n\n:::\n\n\n#### Please submit you .qmd file, as well as the rendered .html file.\n",
    "supporting": [
      "hw4-key_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}